@model EPPlus.WebSampleMvc.NetCore.Models.HtmlExport.ExportRanges6Model
<style type="text/css">
    @Html.Raw(Model.Css)
</style>
<div class="row">
    <div class="col">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item"><a href="/HtmlExport">Html export</a></li>
                <li class="breadcrumb-item active" aria-current="page">Export range</li>
            </ol>
        </nav>
    </div>
</div>
<div class="row">
    <div class="col text-center">
        <h4>Html export - export multiple ranges</h4>
    </div>
</div>
<div class="row my-2">
    <div class="col bg-light rounded">
        <div class="row">
            <div class="col-6">
                <a href="/HtmlExport/ExportRange5">&laquo; Previous sample</a>
            </div>
            <div class="col-6 text-right">
                <a href="#" class="text-secondary">Next sample &raquo;</a>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <p>This sample uses three separate ranges and one table from different worksheets in the same workbook. They are exported as separate html blocks with a common CSS.</p>
        <p><a href="/HtmlExport/GetWorkbookSample6" class="btn btn-sm btn-secondary">Download the workbook</a></p>
    </div>
</div>
<div class="row">
    <div class="col my-3">
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <a class="nav-link active" href="#" id="tab-demo">Demo</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#" id="tab-csharp">C#</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#" id="tab-html">Html</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#" id="tab-css">Css</a>
            </li>
        </ul>
    </div>
</div>
<div class="row demo">
    <div class="col-sm-12 col-md-5">
        <div class="border border-success rounded p-3">
            <p class="text-success">Geography!A1:D10</p>
            @Html.Raw(Model.Html1)
        </div>
    </div>
    <div class="col-sm-12 col-md-5">
        <div class="border border-success rounded p-3">
            <p class="text-success">Geography!G1:J10</p>
        @Html.Raw(Model.Html2)
        </div>
    </div>
</div>
<div class="row demo mt-3">
    <div class="col bg-light rounded box-shadow p-3">
       <h5>Swedish monarchs during the period 1126-1250 a.d.</h5>
       <p>Exported from the second worksheet of the sample workbook. This one is a bit more complex with images, rich text and hyperlinks.</p>
       <p>The data and images are in the public domain (from Wikipedia).</p>
       <div class="border border-success rounded p-3 w-50">
           <p class="text-success">Monarchs!A1:E73</p>
       <a href="#" class="btn btn-secondary" data-toggle="modal" data-target="#swedish-monarchs-modal">Open modal</a>
       </div>
    </div>
</div>
<div class="modal" id="swedish-monarchs-modal">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title">Some swedish kings</h1>
                <button type="button" class="close" data-dismiss="modal">x</button>
            </div>
             <div class="modal-body">
                 <div class="table-responsive">
                    @Html.Raw(Model.Html3)
                </div>
            </div>
            <div class="modal-footer">
                <a href="#" class="btn btn-danger" data-dismiss="modal" id="btn-close-user-form">Close</a>
            </div>
        </div>
    </div>
</div>
<div class="row demo mt-3">
    <div class="col bg-light rounded box-shadow p-3">
       <h5>List of Swedish municipalities</h5>
       <p>Exported from the third worksheet of the sample workbook. The data is from the public domain (from Wikipedia). Here we are using bootstrap table classes and the DataTables UI library to enhance the table's appearance.</p>
       <div class="table-responsive border border-success rounded p-3">
           <p class="text-success">Exported from the Municipalities table in the third worksheet.</p>
            @Html.Raw(Model.Html4)
       </div>
    </div>
</div>
<div class="row csharp" style="display:none">
    <div class="col">
        <pre>
        <code class="language-csharp hljs">
using OfficeOpenXml;
using OfficeOpenXml.Export.HtmlExport;
using System;
using System.IO;

namespace EPPlus.WebSampleMvc.NetCore.Models.HtmlExport
{
    public class ExportRanges6Model
    {
        public void SetupSampleData()
        {
            using(var package = new ExcelPackage(Path.Combine(AppDomain.CurrentDomain.BaseDirectory, $"data\\SwedishGeography.xlsx")))
            {
                var sheet = package.Workbook.Worksheets[0];
                var sheet2 = package.Workbook.Worksheets[1];
                var table = package.Workbook.Worksheets[2].Tables["Municipalities"];
                var exporter = package.Workbook.CreateHtmlExporter(sheet.Cells["A1:D10"], sheet.Cells["G1:J10"], sheet2.Cells["A1:E73"], table.Range);
                exporter.Settings.Pictures.Include = ePictureInclude.Include;
                exporter.Settings.Minify = true;
                // all hyperlinks should open in a new browser window.
                exporter.Settings.HyperlinkTarget = "_blank";
                // change name of the data-value attribute to data-sort
                // to make the dataset sortable in DataTables.js.
                exporter.Settings.DataValueAttributeName = "sort";
                Html1 = exporter.GetHtmlString(0, x =>
                {
                    x.TableId = "cities-table";
                    x.Accessibility.TableSettings.AriaLabel = "Largest cities in Sweden";
                });
                Html2 = exporter.GetHtmlString(1, x =>
                {
                    x.TableId = "lakes-table";
                    x.Accessibility.TableSettings.AriaLabel = "Largest lakes in Sweden";
                });
                Html3 = exporter.GetHtmlString(2, x =>
                {
                    x.TableId = "kings-table";
                    x.Accessibility.TableSettings.AriaLabel = "Some kings in Sweden";
                });
                Html4 = exporter.GetHtmlString(3, x =>
                {
                    x.TableId = "municipalities-table";
                    x.Accessibility.TableSettings.AriaLabel = "Swedish municipalities";
                    // Add bootstrap table classes
                    x.AdditionalTableClassNames.Add("table");
                    x.AdditionalTableClassNames.Add("table-sm");
                });
                Css = exporter.GetCssString();
            }
        }

        public string Css { get; set; }

        public string Html1 { get; set; }

        public string Html2 { get; set; }

        public string Html3 { get; set; }

        public string Html4 { get; set; }
    }
}
            </code>
        </pre>
    </div>
</div>
<div class="row html" style="display:none">
    <div class="col">
        <p>Html for the cities as it was exported</p>
        <pre style="white-space: pre-wrap">
        <code class="language-html hljs" id="html-code">
 @Model.Html1.Trim()
            </code>
        </pre>
        <p>Html for the lakes as it was exported</p>
        <pre style="white-space: pre-wrap">
        <code class="language-html hljs" id="html-code">
 @Model.Html2.Trim()
            </code>
        </pre>
         <p>Html for the monarchs as it was exported</p>
        <pre style="white-space: pre-wrap">
        <code class="language-html hljs" id="html-code">
 @Model.Html3.Trim()
            </code>
        </pre>
    </div>
</div>
<div class="row css" style="display:none">
    <div class="col table-responsive">
        <pre style="white-space: pre-wrap">
        <code class="language-css hljs" id="css-code">
 @Model.Css.Trim()
            </code>
        </pre>
    </div>
</div>
<script type="text/javascript">
    document.addEventListener("DOMContentLoaded", function () {
        jQuery(".csharp").hide();
        jQuery(".html").hide();
        jQuery(".css").hide();
        hljs.highlightAll();
        jQuery("#tab-csharp").click(function (e) {
            e.preventDefault();
            jQuery(".demo").hide();
            jQuery(".csharp").show();
            jQuery(".css").hide();
            jQuery(".html").hide();
            jQuery("#tab-demo").removeClass("active");
            jQuery("#tab-csharp").addClass("active");
            jQuery("#tab-html").removeClass("active");
            jQuery("#tab-css").removeClass("active");
        });
        jQuery("#tab-demo").click(function (e) {
            e.preventDefault();
            jQuery(".demo").show();
            jQuery(".csharp").hide();
            jQuery(".css").hide();
            jQuery(".html").hide();
            jQuery("#tab-demo").addClass("active");
            jQuery("#tab-csharp").removeClass("active");
            jQuery("#tab-css").removeClass("active");
            jQuery("#tab-html").removeClass("active");
        });
        jQuery("#tab-css").click(function (e) {
            e.preventDefault();
            jQuery(".demo").hide();
            jQuery(".csharp").hide();
            jQuery(".css").show();
            jQuery(".html").hide();
            jQuery("#tab-demo").removeClass("active");
            jQuery("#tab-csharp").removeClass("active");
            jQuery("#tab-css").addClass("active");
            jQuery("#tab-html").removeClass("active");
        });
        jQuery("#tab-html").click(function (e) {
            e.preventDefault();
            jQuery(".demo").hide();
            jQuery(".csharp").hide();
            jQuery(".html").show();
            jQuery(".css").hide();
            jQuery("#tab-demo").removeClass("active");
            jQuery("#tab-csharp").removeClass("active");
            jQuery("#tab-css").removeClass("active");
            jQuery("#tab-html").addClass("active");
        });
    });
</script>
<script type="text/javascript">
    document.addEventListener("DOMContentLoaded", function () {
        jQuery.noConflict();
        jQuery('#municipalities-table').DataTable();
    });
</script>