@page "/downloadexcelfile"
@using System.IO
@using OfficeOpenXml
@using Microsoft.JSInterop
@using System.Net
@using System.Reflection
@using System.Dynamic
@inject IJSRuntime JS

<div class="row">
    <div class="col">
        <h5>Download file from EPPlus</h5>
        <p>This sample generates a simple workbook with EPPlus running in a client side Blazor environment - in other words, this workbook is generated by EPPlus 6 running in your browser.</p>
        <p>Features included: autofit columns and adding images in client side Blazor with no access to System.Drawing (needed by previous versions).</p>
    </div>
</div>



<button class="btn btn-primary" @onclick="DownloadExcel">Download workbook</button>

@code {
    private int currentCount = 0;

    async Task DownloadExcel()
    {
        // read png image from embedded resource
        var imageBytes = default(byte[]);
        using var stream = Assembly.GetExecutingAssembly().GetManifestResourceStream("EPPlus.WebSampleMvc.NetCore.WebAssemblySamples.Resources.EPPlus-logo-full.png");
        using var sr = new BinaryReader(stream);
        imageBytes = sr.ReadBytes((int)stream.Length);

        var cities = await JS.InvokeAsync<IEnumerable<ExpandoObject>>("getCities");

        using(var package = new ExcelPackage())
        {
            var sheet = package.Workbook.Worksheets.Add("Test");
            sheet.Cells["A5"].LoadFromDictionaries(cities, x => {
                x.TableStyle = OfficeOpenXml.Table.TableStyles.Medium13;
                x.PrintHeaders = true;
            });
            sheet.Calculate();
            sheet.Cells[1, 1, sheet.Dimension.End.Row, sheet.Dimension.End.Column].AutoFitColumns();
            if(imageBytes != null)
            {
                using(var ms = new MemoryStream(imageBytes))
                {
                    var pic = sheet.Drawings.AddPicture("epplogo", ms, OfficeOpenXml.Drawing.ePictureType.Png);
                    pic.SetSize(50);
                    pic.SetPosition(0, 10, 0, 10);
                }
            }
            await JS.InvokeVoidAsync("BlazorDownloadFile", "Excel.xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", package.GetAsByteArray());

        }
    }
}
